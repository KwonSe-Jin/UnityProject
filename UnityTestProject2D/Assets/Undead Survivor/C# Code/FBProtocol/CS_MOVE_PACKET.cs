// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FBProtocol
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CS_MOVE_PACKET : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static CS_MOVE_PACKET GetRootAsCS_MOVE_PACKET(ByteBuffer _bb) { return GetRootAsCS_MOVE_PACKET(_bb, new CS_MOVE_PACKET()); }
  public static CS_MOVE_PACKET GetRootAsCS_MOVE_PACKET(ByteBuffer _bb, CS_MOVE_PACKET obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CS_MOVE_PACKET __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int PlayerId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public FBProtocol.Vec3? Position { get { int o = __p.__offset(6); return o != 0 ? (FBProtocol.Vec3?)(new FBProtocol.Vec3()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<FBProtocol.CS_MOVE_PACKET> CreateCS_MOVE_PACKET(FlatBufferBuilder builder,
      int player_id = 0,
      Offset<FBProtocol.Vec3> positionOffset = default(Offset<FBProtocol.Vec3>)) {
    builder.StartTable(2);
    CS_MOVE_PACKET.AddPosition(builder, positionOffset);
    CS_MOVE_PACKET.AddPlayerId(builder, player_id);
    return CS_MOVE_PACKET.EndCS_MOVE_PACKET(builder);
  }

  public static void StartCS_MOVE_PACKET(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddPlayerId(FlatBufferBuilder builder, int playerId) { builder.AddInt(0, playerId, 0); }
  public static void AddPosition(FlatBufferBuilder builder, Offset<FBProtocol.Vec3> positionOffset) { builder.AddOffset(1, positionOffset.Value, 0); }
  public static Offset<FBProtocol.CS_MOVE_PACKET> EndCS_MOVE_PACKET(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FBProtocol.CS_MOVE_PACKET>(o);
  }
}


static public class CS_MOVE_PACKETVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*PlayerId*/, 4 /*int*/, 4, false)
      && verifier.VerifyTable(tablePos, 6 /*Position*/, FBProtocol.Vec3Verify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}

<레이아웃 초기화> window->layouts->default

Rigidbody 2D : 물리 엔진을 통해 게임 오브젝트에 물리적인 동작(중력, 충돌, 마찰 등)을 적용할 수 있도록 하는 컴포넌트
Rigidbody2D의 Freeze Rotation 옵션은 2D 물리 시스템에서 오브젝트의 회전을 고정시켜줌 (체크)


Capsule Collider 2D : 물리적 충돌 면을 결정하는 컴포넌트 
Order in Layer : 우선적으로 그리는 순서
GetComponent : 컴포넌트를 가져오는 함수
GetComponent<T>(true) :  비활성화 된 오브젝트도 나타남
FixedUpdate : 물리 연산 프레임마다 호출되는 생명주기 함수
Input.GetAxisRaw : 보정없이 입력 값 반환
CellAnimation : 스프라이트 시트의 이미지를 순차적으로 보여주는 방식


Animation Controller 
Has Exit Time : 애니메이션 상태가 끝날 때까지 대기한 후 전환이 이루어지도록 설정하는 옵션
Has Exit Time 비활성화 : 조건을 만족하는 즉시 트랜지션이 발생합니다. 애니메이션이 끝나지 않아도 다음 상태로 전환될 수 있다.
Animator Override Controller : Animator Controller를 기반으로 특정 애니메이션 클립을 덮어쓰기(상속과 유사)

타일 그리기
tile palette 생성 -> 2d(Rule Tile)생성-> 타일 개수 생성 후 스프라이트에서 개수 만큼 채워주기 -> 생성 후 tile palette에 덮어주기 -> 
그리드 안에서 2d object > tile map > 정사각형 선택 후 -> 배치 후 2d(Rule Tile) 에서 noise로 배치

재배치 (플레이어 카메라 기준으로) 멀어지면 맵 재배치 
composit collider 2d : 타일마다 나눠진 형태를 하나로 합치는 역할 

player 정보 -> GameManager가 가지고 있을 것 ->reposition에 전달

static 변수 inspector에 나오지 않음

OnTriggerExit2D : collider에서 벗어났을 때

Mathf.Abs : 유니티 c#에서 쓰는 abs 함수

unity 2023->
virtual camera ->  follow camera

에셋과 scene과는 별도 분리된 공간 즉, 프리펩은 장면의 오브젝트를 접근할 수 없음
생성을 하면서 초기화 시켜줘야 함 
	void OnEnable()
	{
		target = GameManager.instance.player.GetComponent<Rigidbody2D>();	
	}

 Mathf.FloorToInt 형변환 함수
ceiltoint : 소수점 아래 올리고 형변환

외부 클래스 위에 직렬화 선언
[System.Serializable] 을 통해 인스펙터에서 초기화 가능

Physics2D.CircleCastAll(캐스트 시작위치, 원의 반지름, 캐스팅 방향, 캐스팅 길이, 대상 레이어)  = 원형의 캐스트를 쓰고 모든 결과를 반환하는 함수

 Quaternion.FromToRotation : 지정된 축을 중심으로 목표로 향해 회전하는 함수

coroutine : 생명동기와 비동기처럼 실행되는 함수 
IEnumerator : 코루틴만의 반환형 인터페이스
yield return 코루틴의 반환 키워드

yield return null; // 1프레임 쉬기;
yield return new WaitForSeconds(2f); // 2초 쉬기;

startcorutine(실행할 함수) : 코루틴 함수 실행

GetCurrentAnimatorStateInfo() : 현재 상태 정보를 가져오는 함수

rigid.simulated = false; 리지드바디의 물리적 비활성화

[Header] : 인스펙터의 속성들을 이쁘게 구분시켜주는 타이틀
[TextArea] : 인스펙터에서 여러 줄을 사용할 수 있도록 할 수 있음
reference resolution : 해상도
slider navigation : ui의 tab 포커싱 순서

TextMesh Pro : 한글로 사용하기 힘듦

set native size = 오브젝트 크기를 스프라이트 원래 크기로 설정

WorldToScreenPoint = 월드 상의 오브젝트 위치를 스크린 좌표로 반환

ScriptableObject : MonoBehaviour 스크립트와는 다르게, 씬(Scene)에 종속되지 않고 에셋(Asset)으로 저장할 수 있다. 따라서 반복적으로 사용되는 데이터나 공유가 필요한 데이터를 관리할 때 유용함

CreateAssetMenu : 커스텀 메뉴를 생성하는 옵션

AddComponent<T> 컴포넌트 추가 함수


BroadcastMessage : 특정 함수를 같은 게임 오브젝트와 그 자식 오브젝트에 있는 모든 컴포넌트에 **브로드캐스트(알림)**하는 기능을 제공

Control Child Size : 자식 오브젝트를 자신의 크기에 맞춰 자동 변경

localScale = Vector3.one; scale을 1로 설정

Time.timeScale : 유니티 시간 속도

OnCollisionEnter2D :유니티에서 2D 물리 충돌이 발생했을 때 호출되는 콜백 함수
OnCollisionStay2D :  :유니티에서 2D 물리 시스템에서 두 Collider2D가 충돌 중일 때 매 프레임 동안 호출되는 콜백 함수
transform.childCount:  유니티에서 특정 게임 오브젝트가 가진 자식 오브젝트의 개수
SceneManager.LoadScene : 이름 혹은 인덱스로 장면을 새롭게 부르는 함수
인덱스는 File-bulid profiles-Scene List에서 볼수 있음
Grid Layout Group : 자식 오브젝트를 그리드 형태로 정렬하는 컴포넌트